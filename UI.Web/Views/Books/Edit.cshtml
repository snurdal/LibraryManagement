<!-- Books/Edit.cshtml -->
@model UI.Web.Models.Book.BookEditViewModel
@{
    ViewData["Title"] = "Edit Book";
}

<div class="container-fluid">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Home/Index">Home</a></li>
            <li class="breadcrumb-item"><a href="/Books/Details/@Model.Book.Id">@Model.Book.Title</a></li>
            <li class="breadcrumb-item active">Edit</li>
        </ol>
    </nav>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-book-open me-2"></i>Edit Book</h2>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-action="Edit" method="post" enctype="multipart/form-data">
                        <input asp-for="Book.Id" type="hidden" />

                        <div class="mb-4">
                            <label asp-for="Book.Title" class="form-label">Title <span class="text-danger">*</span></label>
                            <input asp-for="Book.Title" class="form-control" placeholder="Enter book title" maxlength="200" />
                            <span asp-validation-for="Book.Title" class="text-danger"></span>
                        </div>

                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label asp-for="Book.AuthorId" class="form-label">Author <span class="text-danger">*</span></label>
                                <select asp-for="Book.AuthorId" class="form-select">
                                    <option value="">Select an author</option>
                                    @foreach (var author in Model.Authors)
                                    {
                                        <option value="@author.Id">@author.FullName</option>
                                    }
                                </select>
                                <span asp-validation-for="Book.AuthorId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Book.CategoryId" class="form-label">Category <span class="text-danger">*</span></label>
                                <select asp-for="Book.CategoryId" class="form-select">
                                    <option value="">Select a category</option>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="Book.CategoryId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Book.PublishYear" class="form-label">Publish Year</label>
                            <input asp-for="Book.PublishYear" type="number" class="form-control" placeholder="Enter publish year" min="1000" max="@DateTime.Now.Year" />
                            <span asp-validation-for="Book.PublishYear" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Book.Description" class="form-label">Description</label>
                            <textarea asp-for="Book.Description" class="form-control" rows="6" placeholder="Enter detailed description of the book" maxlength="2000"></textarea>
                            <div class="form-text">
                                <span id="descriptionCharCount">0</span>/2000 characters
                            </div>
                            <span asp-validation-for="Book.Description" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Current Cover Image</label>
                            <div class="current-cover-container">
                                @if (!string.IsNullOrEmpty(Model.Book.CoverImagePath))
                                {
                                    <img src="~/@Model.Book.CoverImagePath" alt="@Model.Book.Title" class="img-thumbnail book-cover"
                                         onerror="this.src='/images/no-book-cover.jpg'">
                                }
                                else
                                {
                                    <div class="book-cover d-flex align-items-center justify-content-center bg-light">
                                        <div class="text-center text-muted">
                                            <i class="fas fa-book fa-3x mb-2"></i>
                                            <p class="mb-0">No Cover Image</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="PhotoFile" class="form-label">Upload New Cover Image</label>
                            <input asp-for="PhotoFile" type="file" class="form-control" accept="image/*" id="coverImageFileInput" />
                            <div class="form-text">
                                Choose a new cover image to replace the current one. Supported formats: JPG, PNG, GIF (Max 5MB)
                            </div>
                            <span asp-validation-for="PhotoFile" class="text-danger"></span>

                            <!-- Image Preview -->
                            <div id="imagePreview" class="mt-3" style="display: none;">
                                <label class="form-label">New Cover Image Preview:</label>
                                <div class="text-center">
                                    <div class="preview-wrapper">
                                        <img id="previewImg" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
                                    </div>
                                    <div class="mt-2">
                                        <small class="text-info">
                                            <i class="fas fa-info-circle me-1"></i>New cover image preview
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <input asp-for="Book.CoverImagePath" type="hidden" />

                        <div class="d-flex gap-2 justify-content-end">
                            <a href="/Books/Details/@Model.Book.Id" class="btn btn-secondary btn-lg">
                                <i class="fas fa-times me-2"></i>Cancel
                            </a>
                            <button type="submit" class="btn btn-success btn-lg">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .placeholder-cover {
        width: 200px;
        height: 200px;
        border: 2px dashed #ddd;
        border-radius: 12px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        transition: all 0.3s ease;
    }

        .placeholder-cover:hover {
            border-color: #007bff;
            background-color: #f0f8ff;
        }

    .current-cover-wrapper, .preview-wrapper {
        display: inline-block;
        position: relative;
    }

    .current-cover-img, #previewImg {
        border-radius: 12px;
        object-fit: cover;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

        .current-cover-img:hover, #previewImg:hover {
            transform: scale(1.02);
        }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .text-danger {
        font-size: 0.875rem;
    }
</style>

@section Scripts {
    <script>
        // Auto hide alerts after 5 seconds
        setTimeout(function () {
            $('.alert').fadeOut('slow');
        }, 5000);

        // Description character counter
        const descriptionTextarea = document.querySelector('textarea[name="Book.Description"]');
        const descriptionCounter = document.getElementById('descriptionCharCount');

        function updateDescriptionCount() {
            const currentLength = descriptionTextarea.value.length;
            descriptionCounter.textContent = currentLength;

            if (currentLength > 2000) {
                descriptionCounter.style.color = '#dc3545';
            } else if (currentLength > 1600) {
                descriptionCounter.style.color = '#ffc107';
            } else {
                descriptionCounter.style.color = '#6c757d';
            }
        }

        if (descriptionTextarea) {
            descriptionTextarea.addEventListener('input', updateDescriptionCount);
            updateDescriptionCount(); // Initial count
        }

        // Cover image preview
                const coverImageInput = document.getElementById('coverImageFileInput');
        const imagePreview = document.getElementById('imagePreview');
        const previewImg = document.getElementById('previewImg');
        const validationSpan = document.querySelector('span[data-valmsg-for="PhotoFile"]');

        if (coverImageInput) {
            coverImageInput.addEventListener('change', function (e) {
                const file = e.target.files[0];

                if (!file) {
                    previewImg.src = '';
                    imagePreview.style.display = 'none';
                    if (validationSpan) validationSpan.textContent = '';
                    return;
                }

                const allowedExtensions = ['.jpg', '.jpeg', '.png', '.gif'];
                const fileName = file.name.toLowerCase();
                const extension = fileName.substring(fileName.lastIndexOf('.'));

                if (!allowedExtensions.includes(extension)) {
                    if (validationSpan) {
                        validationSpan.textContent = "Unsupported file type. Please upload a JPG, JPEG, PNG, or GIF image.";
                        validationSpan.classList.add("text-danger");
                    }
                    e.target.value = '';
                    previewImg.src = '';
                    imagePreview.style.display = 'none';
                    return;
                } else {
                    if (validationSpan) {
                        validationSpan.textContent = '';
                        validationSpan.classList.remove("text-danger");
                    }
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    previewImg.src = e.target.result;
                    imagePreview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            });
        }

    </script>
}