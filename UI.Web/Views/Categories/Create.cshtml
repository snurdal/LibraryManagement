<!-- Categories/Create.cshtml -->
@model UI.Web.Models.Category.CategoryCreateViewModel
@{
    ViewData["Title"] = "Create Category";
}

<div class="container mt-4">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Home/Index">Home</a></li>
            <li class="breadcrumb-item"><a href="/Categories/Index">Categories</a></li>
            <li class="breadcrumb-item active" aria-current="page">Create Category</li>
        </ol>
    </nav>

    <h2 class="mb-4"><i class="fas fa-plus-circle me-2"></i>Create New Category</h2>

    <div class="card shadow-sm">
        <div class="card-body">
            <form asp-action="Create" method="post" class="needs-validation" novalidate>
                @Html.AntiForgeryToken()

                <div class="mb-3">
                    <label asp-for="Category.Name" class="form-label">
                        <i class="fas fa-tag me-1"></i>Category Name
                        <span class="text-danger">*</span>
                    </label>
                    <input asp-for="Category.Name"
                           class="form-control"
                           placeholder="Enter category name..."
                           maxlength="100"
                           required />
                    <span class="text-danger" asp-validation-for="Category.Name"></span>
                </div>

                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save me-2"></i>Create Category
                </button>
                <a href="/Categories/Index" class="btn btn-secondary ms-2">
                    <i class="fas fa-arrow-left me-2"></i>Back to List
                </a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Bootstrap 5 validation
        (() => {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()

        // Auto-focus on category name input
        document.addEventListener('DOMContentLoaded', function() {
            const categoryInput = document.querySelector('#Category_Name');
            if (categoryInput) {
                categoryInput.focus();
            }
        });
    </script>
}